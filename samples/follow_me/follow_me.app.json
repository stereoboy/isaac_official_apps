{
  "name": "follow_me",
  "modules": [
    "navigation",
    "perception:april_tags",
    "perception",
    "planner",
    "segway",
    "realsense",
    "sensors:joystick",
    "velodyne",
    "viewers",
    "zed"
  ],
  "config": {
    "april_tags_detection": {
      "isaac.perception.AprilTagsDetection": {
        "max_tags": 50,
        "tag_dimensions": 0.165
      }
    },
    "fiducial_as_goal": {
      "isaac.perception.FiducialAsGoal": {
        "target_fiducial_id": "tag36h11_7",
        "robot_frame": "robot",
        "camera_frame": "left_camera"
      }
    },
    "camera": {
      "zed_left_camera_initializer": {
        "lhs_frame": "robot",
        "rhs_frame": "left_camera",
        "pose": [
          0.5,
          -0.5,
          0.5,
          -0.5,
          0.11,
          0.06,
          0.73
        ]
      },
      "zed_right_camera_initializer": {
        "lhs_frame": "robot",
        "rhs_frame": "right_camera",
        "pose": [
          0.5,
          -0.5,
          0.5,
          -0.5,
          0.11,
          -0.06,
          0.73
        ]
      },
      "isaac.ZedCamera": {
        "resolution": "1280x720",
        "tick_period": "60Hz"
      }
    },
    "camera_viewer": {
      "isaac.viewers.ColorCameraViewer": {
        "target_fps": 20,
        "camera_name": "left_camera"
      }
    },
    "segway_rmp": {
      "isaac.SegwayRmpDriver": {
        "ip": "192.168.0.40",
        "tick_period": "20ms"
      },
      "isaac.alice.Failsafe": {
        "name": "segway"
      }
    },
    "diffbase_joystick": {
      "isaac.alice.FailsafeHeartbeat": {
        "interval": 0.25,
        "failsafe_name": "segway",
        "heartbeat_name": "deadman_switch"
      },
      "isaac.navigation.RobotRemoteControl": {
        "tick_period": "10ms"
      }
    },
    "vlp16": {
      "lidar_initializer": {
        "lhs_frame": "robot",
        "rhs_frame": "lidar",
        "pose": [
          1.0,
          0.0,
          0.0,
          0.0,
          -0.04,
          0.0,
          0.0
        ]
      },
      "isaac.VelodyneDriver": {
        "ip": "192.168.0.5"
      }
    },
    "range_scan_flattening": {
      "isaac.perception.RangeScanFlattening": {
        "height_min": -0.60,
        "height_max": 0.60,
        "pitch_fudge": 0.0174533,
        "min_count": 900
      }
    },
    "local_map": {
      "isaac.navigation.OccupancyToBinaryMap": {
        "mean_threshold": 32,
        "stdandard_deviation_threshold": 0
      },
      "isaac.navigation.BinaryToDistanceMap": {
        "local_map_name": "local_map",
        "compute_distance_inside": true,
        "blur_factor": 3,
        "max_distance": 5.0
      }
    },
    "lqr": {
      "isaac.planner.DifferentialBaseLqrPlanner": {
        "max_speed": 0.65,
        "num_controls": 50,
        "local_maps": [
          "local_map"
        ],
        "tick_period": "10Hz"
      }
    },
    "control": {
      "isaac.planner.DifferentialBaseControl": {
        "use_tick_time": true,
        "tick_period": "100Hz"
      }
    },
    "segway_odometry": {
      "isaac.navigation.DifferentialBaseOdometry": {
        "tick_period": "100Hz"
      }
    },
    "websight": {
      "WebsightServer": {
        "webroot": "packages/sight/webroot",
        "assetroot": "../isaac_assets",
        "port": 3000,
        "ui_config": {
          "windows": {
            "follow me - Local View": {
              "renderer": "2d",
              "dims": {
                "width": 256,
                "height": 256
              },
              "channels": [
                {
                  "name": "follow_me/local_map/isaac.navigation.LocalMap/local_map"
                },
                {
                  "name": "follow_me/lqr/isaac.planner.DifferentialBaseLqrPlanner/plan"
                },
                {
                  "name": "follow_me/fiducial_as_goal/isaac.perception.FiducialAsGoal/all"
                },
                {
                  "name": "follow_me/fiducial_as_goal/isaac.perception.FiducialAsGoal/target"
                }
              ]
            },
            "follow me - Tags": {
              "renderer": "2d",
              "channels": [
                {
                  "name": "follow_me/camera_viewer/isaac.viewers.ColorCameraViewer/Color"
                },
                {
                  "name": "follow_me/april_tags_detection/isaac.perception.AprilTagsDetection/tag_fill"
                },
                {
                  "name": "follow_me/april_tags_detection/isaac.perception.AprilTagsDetection/tag_boundary"
                },
                {
                  "name": "follow_me/fiducial_as_goal/isaac.perception.FiducialAsGoal/tag_pose"
                },
                {
                  "name": "follow_me/fiducial_as_goal/isaac.perception.FiducialAsGoal/target_line"
                },
                {
                  "name": "follow_me/fiducial_as_goal/isaac.perception.FiducialAsGoal/target"
                }
              ]
            }
          }
        }
      }
    }
  },
  "graph": {
    "nodes": [
      {
        "name": "camera",
        "components": [
          {
            "name": "zed_left_camera_initializer",
            "type": "isaac::alice::PoseInitializer"
          },
          {
            "name": "zed_right_camera_initializer",
            "type": "isaac::alice::PoseInitializer"
          },
          {
            "name": "isaac.alice.MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.ZedCamera",
            "type": "isaac::ZedCamera"
          }
        ]
      },
      {
        "name": "camera_viewer",
        "components": [
          {
            "name": "isaac.alice.MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.viewers.ColorCameraViewer",
            "type": "isaac::viewers::ColorCameraViewer"
          }
        ]
      },
      {
        "name": "april_tags_detection",
        "components": [
          {
            "name": "isaac.alice.MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.perception.AprilTagsDetection",
            "type": "isaac::perception::AprilTagsDetection"
          }
        ]
      },
      {
        "name": "fiducial_as_goal",
        "components": [
          {
            "name": "isaac.alice.MessageLedger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.perception.FiducialAsGoal",
            "type": "isaac::perception::FiducialAsGoal"
          }
        ]
      },
      {
        "name": "shared_robot_model",
        "components": [
          {
            "name": "RangeScanModel",
            "type": "isaac::navigation::RangeScanModelFlatloc"
          },
          {
            "name": "DifferentialBaseModel",
            "type": "isaac::planner::DifferentialBaseModel"
          }
        ]
      },
      {
        "name": "obstacle_world",
        "components": [
          {
            "name": "obstacle_world",
            "type": "isaac::navigation::ObstacleWorld"
          }
        ]
      },
      {
        "name": "local_map",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.navigation.LocalMap",
            "type": "isaac::navigation::LocalMap"
          },
          {
            "name": "isaac.navigation.OccupancyToBinaryMap",
            "type": "isaac::navigation::OccupancyToBinaryMap"
          },
          {
            "name": "isaac.navigation.BinaryToDistanceMap",
            "type": "isaac::navigation::BinaryToDistanceMap"
          }
        ]
      },
      {
        "name": "segway_odometry",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.navigation.DifferentialBaseOdometry",
            "type": "isaac::navigation::DifferentialBaseOdometry"
          }
        ]
      },
      {
        "name": "lqr",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.planner.DifferentialBaseLqrPlanner",
            "type": "isaac::planner::DifferentialBaseLqrPlanner"
          }
        ]
      },
      {
        "name": "control",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.planner.DifferentialBaseControl",
            "type": "isaac::planner::DifferentialBaseControl"
          }
        ]
      },
      {
        "name": "vlp16",
        "components": [
          {
            "name": "lidar_initializer",
            "type": "isaac::alice::PoseInitializer"
          },
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.VelodyneDriver",
            "type": "isaac::VelodyneDriver"
          }
        ]
      },
      {
        "name": "scan_accumulator",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.perception.ScanAccumulator",
            "type": "isaac::perception::ScanAccumulator"
          }
        ]
      },
      {
        "name": "range_scan_flattening",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.perception.RangeScanFlattening",
            "type": "isaac::perception::RangeScanFlattening"
          }
        ]
      },
      {
        "name": "joystick",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.Joystick",
            "type": "isaac::Joystick"
          }
        ]
      },
      {
        "name": "segway_rmp",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.SegwayRmpDriver",
            "type": "isaac::SegwayRmpDriver"
          },
          {
            "name": "isaac.alice.Failsafe",
            "type": "isaac::alice::Failsafe"
          }
        ]
      },
      {
        "name": "diffbase_joystick",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "isaac.navigation.RobotRemoteControl",
            "type": "isaac::navigation::RobotRemoteControl"
          },
          {
            "name": "isaac.alice.FailsafeHeartbeat",
            "type": "isaac::alice::FailsafeHeartbeat"
          }
        ]
      }
    ],
    "edges": [
      {
        "source": "camera/isaac.ZedCamera/left_camera_rgb",
        "target": "april_tags_detection/isaac.perception.AprilTagsDetection/image"
      },
      {
        "source": "camera/isaac.ZedCamera/left_camera_rgb",
        "target": "camera_viewer/isaac.viewers.ColorCameraViewer/color_listener"
      },
      {
        "source": "april_tags_detection/isaac.perception.AprilTagsDetection/april_tags",
        "target": "fiducial_as_goal/isaac.perception.FiducialAsGoal/fiducials"
      },
      {
        "source": "segway_odometry/isaac.navigation.DifferentialBaseOdometry/odometry",
        "target": "lqr/isaac.planner.DifferentialBaseLqrPlanner/odometry"
      },
      {
        "source": "local_map/isaac.navigation.LocalMap/local_map",
        "target": "local_map/isaac.navigation.OccupancyToBinaryMap/occupancy_map"
      },
      {
        "source": "local_map/isaac.navigation.OccupancyToBinaryMap/binary_map",
        "target": "local_map/isaac.navigation.BinaryToDistanceMap/binary_map"
      },
      {
        "source": "lqr/isaac.planner.DifferentialBaseLqrPlanner/plan",
        "target": "control/isaac.planner.DifferentialBaseControl/plan"
      },
      {
        "source": "fiducial_as_goal/isaac.perception.FiducialAsGoal/plan",
        "target": "lqr/isaac.planner.DifferentialBaseLqrPlanner/global_plan"
      },
      {
        "source": "vlp16/isaac.VelodyneDriver/scan",
        "target": "scan_accumulator/isaac.perception.ScanAccumulator/scan"
      },
      {
        "source": "scan_accumulator/isaac.perception.ScanAccumulator/fullscan",
        "target": "range_scan_flattening/isaac.perception.RangeScanFlattening/scan"
      },
      {
        "source": "range_scan_flattening/isaac.perception.RangeScanFlattening/flatscan",
        "target": "local_map/isaac.navigation.LocalMap/flatscan"
      },
      {
        "source": "segway_rmp/isaac.SegwayRmpDriver/segway_state",
        "target": "segway_odometry/isaac.navigation.DifferentialBaseOdometry/state"
      },
      {
        "source": "control/isaac.planner.DifferentialBaseControl/cmd",
        "target": "diffbase_joystick/isaac.navigation.RobotRemoteControl/ctrl"
      },
      {
        "source": "joystick/isaac.Joystick/js_state",
        "target": "diffbase_joystick/isaac.navigation.RobotRemoteControl/js_state"
      },
      {
        "source": "diffbase_joystick/isaac.navigation.RobotRemoteControl/segway_cmd",
        "target": "segway_rmp/isaac.SegwayRmpDriver/segway_cmd"
      }
    ]
  }
}